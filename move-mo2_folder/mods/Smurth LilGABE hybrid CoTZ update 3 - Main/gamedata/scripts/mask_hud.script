-- Actor Effects by Smurth
-- Original code by Rulix aka Bak:
-- rewritten for Coc by Nuor

--[[
CoC 1.5r7 jeredy_hothead
]]--

local DynHud,hud
feature_is_active = nil
helmet_hud_draw = false
prev_helmet = nil
helmets_table = nil

function activate_hud()
	if (feature_is_active) then
		return 
	end
	feature_is_active = true
	helmets_table = {
		"helm_invisible",
		"helm_respirator",
		"helm_exo",
		"helm_protective",
		"helm_hardhat",
		"helm_scientific",
		"helm_battle",
		"helm_tactic",
	}
	open_hud()
	RegisterScriptCallback("actor_on_net_destroy",net_destroy)
end

function deactivate_hud()
	if not (feature_is_active) then
		return 
	end
	feature_is_active = false
	mask_brightness = false
	helmet_hud_draw = false
	helmets_table = nil
	UnregisterScriptCallback("actor_on_net_destroy",net_destroy)
	close_hud()
end

function open_hud()
	hud = get_hud()
	DynHud = DynamicHud()
	if DynHud then
		hud:AddDialogToRender(DynHud)
	end
end

function close_hud()
	if DynHud then
		hud:RemoveDialogToRender(DynHud)
		remove_texture(get_helm_obj())
		DynHud = nil
		hud = nil
	end
end

function get_helm_obj()
	local helm_obj = db.actor:alive() and (db.actor:item_in_slot(12) or db.actor:item_in_slot(7) or db.actor:item_in_slot(1) or db.actor:item_in_slot(2) or db.actor:item_in_slot(3) or db.actor:item_in_slot(4) or db.actor:item_in_slot(5) or db.actor:item_in_slot(6) or db.actor:item_in_slot(8) or db.actor:item_in_slot(9) or db.actor:item_in_slot(10) or db.actor:item_in_slot(11))
	return helm_obj
end

function get_helm_cond_number(helm_obj)
	local cond = (helm_obj and helm_obj:condition()) or 0
	if (cond == 1) then
		cond = cond - 0.000004
	end
	cond = math.floor((cond-1)*11.1)*(-1)
	return cond
end

function get_mask_name(helm_obj)
	if (helm_obj) then
		local sys_ini = system_ini()
		local helmet = sys_ini:r_string_ex(helm_obj:section(),"mask_hud")
		return helmet
	end
end

function get_helmet_no_respi(helm_obj)
	local sys_ini = system_ini()
	local helmet_no_respi = sys_ini:r_bool_ex(helm_obj:section(),"mask_hud_no_respi",false)
	return helmet_no_respi
end

function get_texture_name(helm_obj)
	local name = get_mask_name(helm_obj)
	local number = get_helm_cond_number(helm_obj)
	if (name) then
		return name .. number
	else
		return nil
	end
end

function draw_texture()
	if (get_texture_name(get_helm_obj())) then
		hud:AddCustomStatic(get_texture_name(get_helm_obj()), true)
		helmet_hud_draw = true
		prev_helmet = get_helm_obj()
		if not (db.actor:has_info("mask_texture")) then
			db.actor:give_info_portion("mask_texture")
		end
	end
end

function remove_texture(helm_obj)
	if (helmet_hud_draw == true) then
		hud:RemoveCustomStatic(get_texture_name(helm_obj))
		helmet_hud_draw = false
	end
end

function check_name(name)
    for index, value in ipairs(helmets_table) do
        if value == name then
            return true
        end
    end
    return false
end

function play_sound(helm_obj, snd_obj_path)
	local snd		
	if get_helmet_no_respi(helm_obj) then
		snd = sound_object("actor\\gasmask_nobreath")
	else
		snd = sound_object(snd_obj_path)
	end
	snd:play(db.actor,0,sound_object.s2d)
end

function on_game_start()
	if (axr_main.config:r_value("mm_options","enable_mask_hud",1,false) == false) then return end
	local function actor_on_first_update()
		activate_hud()
	end
	RegisterScriptCallback("actor_on_first_update",actor_on_first_update)
end

function net_destroy()
	close_hud()
end

--//	----------------------------------------------------------
--//	-------------------DynHud class---------------------------
--//	----------------------------------------------------------
class "DynamicHud" (CUIScriptWnd)
function DynamicHud:__init() super()
	self.step_tg = time_global()
	self.tmr = self.step_tg
	self.mask_name = ""
	self.name = ""
	self.condition = 1
end

function DynamicHud:Update()
	self.tg = time_global()
	if self.tg > self.tmr then
		self.tmr = self.tg+180
		if check_name(get_mask_name(get_helm_obj())) then
			self:hud_condition()
		else
			if (helmet_hud_draw == true) then
				play_sound(prev_helmet, "actor\\gasmask_off")
				remove_texture(prev_helmet)
				self.mask_name = ""
				self.condition = 1
				self.name = ""
			end
		end
		if (arszi_radiation) then return end
		self:ActorRadiation()
	end
end

function DynamicHud:hud_condition()
	local helm_obj = get_helm_obj()
	if not (get_mask_name(helm_obj)) then 
		return 
	end
	if helm_obj:name() ~= self.name then
		remove_texture(prev_helmet)
		draw_texture()
		self.mask_name = get_mask_name(helm_obj)
		self.name = helm_obj:name()
		self.condition = get_helm_cond_number(helm_obj)
		play_sound(prev_helmet, "actor\\gasmask_on")	
	end
	if get_helm_cond_number(helm_obj) ~= self.condition then
		if get_helm_cond_number(helm_obj) > self.condition then
			local snd_obj = sound_object("material\\glass\\glass_fall03hl")
			snd_obj:play(db.actor,0,sound_object.s2d)
		end
		if (helmet_hud_draw == true) then
			hud:RemoveCustomStatic(self.mask_name .. self.condition)
			helmet_hud_draw = false
		end
		draw_texture()
		self.condition = get_helm_cond_number(helm_obj)
	end
end

function DynamicHud:ActorRadiation()
	local radiation = db.actor.radiation
	if radiation > 0 then
		if math.random()<radiation then
			radiation = radiation>0.5 and math.random()<radiation/1.3 and "click3" or math.random(8)
			local snd = sound_object("detectors\\geiger_"..radiation)
			snd:play(db.actor,0,sound_object.s2d)
		end
	end
end